<application>
  <component name="ParameterNameHintsSettings">
    <blacklists>
      <blacklist language="TypeScript">
        <added pattern="GraphQLServer.start(options,callback)" />
      </blacklist>
      <blacklist language="ECMAScript 6">
        <added pattern="_.truncate(string,options)" />
      </blacklist>
      <blacklist language="PHP">
        <added pattern="\array_diff(array1,array2,_)" />
        <added pattern="\compact(varname,_)" />
        <added pattern="\Illuminate\Routing\Route.where(name,expression)" />
        <added pattern="\Illuminate\Routing\Route.name(name)" />
        <added pattern="\Illuminate\Support\Facades\Route.get(uri,action)" />
        <added pattern="\Illuminate\Support\Facades\Route.post(uri,action)" />
        <added pattern="\Illuminate\Support\Facades\Route.put(uri,action)" />
        <added pattern="\Illuminate\Support\Facades\Route.delete(uri,action)" />
        <added pattern="\sprintf(format,args,_)" />
        <added pattern="\Symfony\Component\HttpFoundation\BinaryFileResponse.deleteFileAfterSend(shouldDelete)" />
        <added pattern="\env(key,default)" />
        <added pattern="\Silber\Bouncer\BouncerFacade.allow(authority)" />
        <added pattern="\App\Http\Resources\ResourceResponse.formatDateIfLoaded(dateColumn)" />
        <added pattern="\Eloquent.whereNotIn(column,values,boolean)" />
        <added pattern="\Illuminate\Http\Resources\ConditionallyLoadsAttributes.whenLoaded(relationship,value,default)" />
        <added pattern="\Illuminate\Console\Command.info(string,verbosity)" />
        <added pattern="\route(name,parameters,absolute)" />
        <added pattern="\Tests\TestCase.getQuery(className,method)" />
        <added pattern="\Tests\TestCase.getGraphQLQuery(className,method)" />
        <added pattern="\Folklore\GraphQL\Support\Facades\GraphQL.type(name,fresh)" />
        <added pattern="\Illuminate\Database\Query\Builder.join(table,first,operator,second,type,where)" />
        <added pattern="\roleByName(name)" />
        <added pattern="\array_replace_key_recursive(arr,findKey,replacedKey)" />
        <added pattern="\roleByName(names)" />
        <added pattern="\League\Glide\Server.setCacheWithFileExtensions(cacheWithFileExtensions)" />
        <added pattern="\Illuminate\Support\Fluent.comment(comment)" />
        <added pattern="\Illuminate\Support\Fluent.default(value)" />
        <added pattern="\App\Annotation.isCalculationStyle(style)" />
        <added pattern="\Illuminate\Database\Eloquent\Builder.where(column,operator,value,boolean)" />
        <added pattern="\Illuminate\Database\Query\Builder.limit(value)" />
        <added pattern="\ifActiveRoute(route,outputIfMatch,outputIfNoMatch)" />
        <added pattern="\Illuminate\Database\Query\Builder.value(column)" />
        <added pattern="\Illuminate\Database\Eloquent\Concerns\HasRelationships.relationLoaded(key)" />
        <added pattern="\Illuminate\Database\Eloquent\Relations\BelongsTo.associate(model)" />
        <added pattern="\Illuminate\Database\Eloquent\Builder.value(column)" />
        <added pattern="\preg_replace(pattern,replacement,subject,limit,count)" />
        <added pattern="\Illuminate\Console\Command.comment(string,verbosity)" />
        <added pattern="\str_pad(input,pad_length,pad_string,pad_type)" />
        <added pattern="\Illuminate\Support\Facades\Route.resource(name,controller,options)" />
      </blacklist>
    </blacklists>
  </component>
</application>